// Generated by view binder compiler. Do not edit!
package com.fyp.awacam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fyp.awacam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DriveInfoBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout showDirectory;

  @NonNull
  public final TextView tvDriveFormat;

  @NonNull
  public final TextView tvDriveLabel;

  @NonNull
  public final TextView tvDriveName;

  @NonNull
  public final TextView tvDriveType;

  private DriveInfoBinding(@NonNull CardView rootView, @NonNull LinearLayout showDirectory,
      @NonNull TextView tvDriveFormat, @NonNull TextView tvDriveLabel,
      @NonNull TextView tvDriveName, @NonNull TextView tvDriveType) {
    this.rootView = rootView;
    this.showDirectory = showDirectory;
    this.tvDriveFormat = tvDriveFormat;
    this.tvDriveLabel = tvDriveLabel;
    this.tvDriveName = tvDriveName;
    this.tvDriveType = tvDriveType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DriveInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DriveInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.drive_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DriveInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.show_directory;
      LinearLayout showDirectory = ViewBindings.findChildViewById(rootView, id);
      if (showDirectory == null) {
        break missingId;
      }

      id = R.id.tv_drive_format;
      TextView tvDriveFormat = ViewBindings.findChildViewById(rootView, id);
      if (tvDriveFormat == null) {
        break missingId;
      }

      id = R.id.tv_drive_label;
      TextView tvDriveLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvDriveLabel == null) {
        break missingId;
      }

      id = R.id.tv_drive_name;
      TextView tvDriveName = ViewBindings.findChildViewById(rootView, id);
      if (tvDriveName == null) {
        break missingId;
      }

      id = R.id.tv_drive_type;
      TextView tvDriveType = ViewBindings.findChildViewById(rootView, id);
      if (tvDriveType == null) {
        break missingId;
      }

      return new DriveInfoBinding((CardView) rootView, showDirectory, tvDriveFormat, tvDriveLabel,
          tvDriveName, tvDriveType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
